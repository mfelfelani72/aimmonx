"use strict";(self.webpackChunkbuiler=self.webpackChunkbuiler||[]).push([[1621],{1063:(e,t,n)=>{var u=n(6540),r="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},o=u.useState,s=u.useEffect,i=u.useLayoutEffect,a=u.useDebugValue;function c(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!r(e,n)}catch(e){return!0}}var l="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),u=o({inst:{value:n,getSnapshot:t}}),r=u[0].inst,l=u[1];return i((function(){r.value=n,r.getSnapshot=t,c(r)&&l({inst:r})}),[e,n,t]),s((function(){return c(r)&&l({inst:r}),e((function(){c(r)&&l({inst:r})}))}),[e]),a(n),n};t.useSyncExternalStore=void 0!==u.useSyncExternalStore?u.useSyncExternalStore:l},6559:(e,t,n)=>{var u=n(6540),r=n(7507),o="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},s=r.useSyncExternalStore,i=u.useRef,a=u.useEffect,c=u.useMemo,l=u.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,n,u,r){var f=i(null);if(null===f.current){var d={hasValue:!1,value:null};f.current=d}else d=f.current;f=c((function(){function e(e){if(!a){if(a=!0,s=e,e=u(e),void 0!==r&&d.hasValue){var t=d.value;if(r(t,e))return i=t}return i=e}if(t=i,o(s,e))return t;var n=u(e);return void 0!==r&&r(t,n)?t:(s=e,i=n)}var s,i,a=!1,c=void 0===n?null:n;return[function(){return e(t())},null===c?void 0:function(){return e(c())}]}),[t,n,u,r]);var v=s(e,f[0],f[1]);return a((function(){d.hasValue=!0,d.value=v}),[v]),l(v),v}},7507:(e,t,n)=>{e.exports=n(1063)},9242:(e,t,n)=>{e.exports=n(6559)},1621:(e,t,n)=>{n.d(t,{vt:()=>f});const u=e=>{let t;const n=new Set,u=(e,u)=>{const r="function"==typeof e?e(t):e;if(!Object.is(r,t)){const e=t;t=(null!=u?u:"object"!=typeof r||null===r)?r:Object.assign({},t,r),n.forEach((n=>n(t,e)))}},r=()=>t,o={setState:u,getState:r,getInitialState:()=>s,subscribe:e=>(n.add(e),()=>n.delete(e)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},s=t=e(u,r,o);return o};var r=n(6540),o=n(9242);const{useDebugValue:s}=r,{useSyncExternalStoreWithSelector:i}=o;let a=!1;const c=e=>e,l=e=>{"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t="function"==typeof e?(e=>e?u(e):u)(e):e,n=(e,n)=>function(e,t=c,n){n&&!a&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),a=!0);const u=i(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,n);return s(u),u}(t,e,n);return Object.assign(n,t),n},f=e=>e?l(e):l}}]);